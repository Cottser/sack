#!/bin/bash
#
# @filename: sack
# @author: Sampson L. Chen (sampson-chen / slchen)
# @date: 2012-10-14
#
# @description: 
# s(hortcut)-ack - a faster way to use ack (or grep)!
# 
# @dependencies:
# - ack (http://betterthangrep.com/)
# - awk
# - sed
#
# @license:
# - MIT as of this version.
#
# @usage:
# - for additional usage information, see README.md

sack_config_path=~/sampson-chen-util/sack/.sackrc

# Set up the variables to use for sack
. $sack_config_path

# Script Functions

# Prefixes a shortcut tag to relevant output lines.
display_shortcuts() {
    # Note that by default ack uses the --nogroup -H option by default when
    # output is piped or redirected, so we do get a file name on each line as $1
    # We could have restored the default look for ack with the --group option, but
    # it turns out that this is actually simpler to parse with --nogroup and then
    # reformat the output to match the --group formats.
    awk -v y=$shortcut_cmd -v f_name=$sack__file_name -F':' 'BEGIN {x=1};
    {
        if ($1 != f_name) {
            printf("\n%s\n", $1);
            f_name=$1;
        };
        printf("[%s %s] ", y, x);
        for (i=2; i<=NF; i++) {
            printf("%s", $i);
        }
        printf("\n");
        x++;
    };'
}

# Script Main
sack__file_name="     "
# We add the pwd as last argument to ack so the file names of output
# are displayed as absolute paths, so that they can be shared across
# multiple terminal / shell sessions
sack__cwd=$(pwd) 
ack --color $@ $sack__cwd | display_shortcuts
echo ""
